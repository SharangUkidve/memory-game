{"version":3,"sources":["components/Card.tsx","shared/utils/array.utils.ts","assets/images/close.svg","components/Modal.tsx","components/WinModal.tsx","views/Game.tsx","shared/constants/fruits.ts","components/About.tsx","components/HowToPlay.tsx","components/Header.tsx","App.tsx","index.tsx"],"names":["Card","card","onClick","open","found","klass","className","disabled","aria-label","title","aria-hidden","src","process","alt","width","height","value","shuffle","arr","newArr","i","length","j","Math","floor","random","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","_ref3","id","transform","d","SvgClose","_ref","svgRef","titleId","props","xmlns","viewBox","ref","undefined","ForwardRef","Modal","show","onClose","children","focusAnchor","useRef","setTimeout","current","focus","close","ReactDOM","createPortal","role","onKeyDown","e","tabIndex","document","body","WinModal","playAgain","score","moves","Game","useState","cards","setCards","foundCards","setFoundCards","card1","setCard1","card2","setCard2","setScore","setMoves","showWinModal","setShowWinModal","resetCards","resetGame","useCallback","shuffledCards","slice","size","ogCards","map","k","dupeCards","isCardOpen","isCardFound","includes","handleCardClick","useEffect","m","fc","sc","fruits","About","setShow","href","rel","HowToPlay","Header","handleGameSizeSelection","sz","App","parseInt","localStorage","getItem","setSize","setItem","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.37c65cda.chunk.js","sourcesContent":["import { MemoryCard } from '../shared/models/MemoryCard';\r\n\r\nexport interface CardProps {\r\n  card: MemoryCard;\r\n  onClick: any;\r\n  open?: boolean;\r\n  found?: boolean;\r\n}\r\n\r\nconst Card: React.FunctionComponent<CardProps> = ({\r\n  card,\r\n  onClick,\r\n  open,\r\n  found\r\n}) => {\r\n  const klass = `card${open ? ' open' : ''}${found ? ' found open' : ''}`;\r\n  return (\r\n    <button\r\n      className={klass}\r\n      onClick={() => onClick(card)}\r\n      disabled={found}\r\n      aria-label={found || open ? card.title : 'Card'}\r\n    >\r\n      <div className='card-wrap' aria-hidden='true'>\r\n        <div className='card-face front'>\r\n          <img\r\n            src={`${process.env.PUBLIC_URL}/assets/images/card-back-star.svg`}\r\n            alt=''\r\n            width='100%'\r\n            height='100%'\r\n            className='card-image'\r\n          />\r\n        </div>\r\n\r\n        <div className='card-face back'>\r\n          <img\r\n            src={`${process.env.PUBLIC_URL}/assets/images/${card.value}.png`}\r\n            alt=''\r\n            width='100%'\r\n            height='100%'\r\n            className='card-image'\r\n          />\r\n          <div className='card-title'>{card.title}</div>\r\n        </div>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","export function shuffle(arr: any[]) {\r\n  const newArr = [...arr];\r\n  for (let i = arr.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [newArr[i], newArr[j]] = [newArr[j], newArr[i]];\r\n  }\r\n  return newArr;\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#fff;opacity:0;}.icon{fill:#231f20;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_2\",\n  \"data-name\": \"Layer 2\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"close\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"close-2\",\n  \"data-name\": \"close\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  className: \"cls-1\",\n  width: 24,\n  height: 24,\n  transform: \"translate(24 24) rotate(180)\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"icon\",\n  d: \"M13.41,12l4.3-4.29a1,1,0,1,0-1.42-1.42L12,10.59,7.71,6.29A1,1,0,0,0,6.29,7.71L10.59,12l-4.3,4.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0L12,13.41l4.29,4.3a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42Z\"\n}))));\n\nfunction SvgClose(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), _ref2, title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Close\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgClose);\nexport default __webpack_public_path__ + \"static/media/close.c7dae9e0.svg\";\nexport { ForwardRef as ReactComponent };","import { Fragment, KeyboardEvent, useRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../Modal.scss';\r\nimport { ReactComponent as Close } from '../assets/images/close.svg';\r\n\r\nexport interface ModalProps {\r\n  show: boolean;\r\n  onClose: any;\r\n  className?: string;\r\n}\r\n\r\nconst Modal: React.FunctionComponent<ModalProps> = ({\r\n  show,\r\n  onClose,\r\n  className,\r\n  children\r\n}) => {\r\n  const focusAnchor = useRef<HTMLDivElement>(null);\r\n  if (show) {\r\n    setTimeout(() => {\r\n      focusAnchor.current?.focus();\r\n    }, 100);\r\n  }\r\n\r\n  const close = () => {\r\n    onClose();\r\n  };\r\n\r\n  const handleKeydown = (e: KeyboardEvent<HTMLDivElement>) => {\r\n    if (e.key === 'Escape') {\r\n      close();\r\n    }\r\n  };\r\n\r\n  return show\r\n    ? ReactDOM.createPortal(\r\n        <Fragment>\r\n          <div\r\n            className='modal-overlay'\r\n            onClick={close}\r\n            role='presentation'\r\n          ></div>\r\n          <div className='modal-backdrop'>\r\n            <div\r\n              className={`modal${className ? ' ' + className : ''}`}\r\n              role='dialog'\r\n              onKeyDown={handleKeydown}\r\n            >\r\n              <div\r\n                ref={focusAnchor}\r\n                tabIndex={-1}\r\n                className='focus-anchor v-hide'\r\n              ></div>\r\n              <button className='modal-close' onClick={close}>\r\n                <Close />\r\n              </button>\r\n              {children}\r\n            </div>\r\n          </div>\r\n        </Fragment>,\r\n        document.body\r\n      )\r\n    : null;\r\n};\r\n\r\nexport default Modal;\r\n","import Modal from './Modal';\r\n\r\nexport interface WinModalProps {\r\n  show: boolean;\r\n  onClose: any;\r\n  playAgain: any;\r\n  score: number;\r\n  moves: number;\r\n}\r\n\r\nconst WinModal: React.FunctionComponent<WinModalProps> = ({\r\n  show,\r\n  onClose,\r\n  playAgain,\r\n  score,\r\n  moves\r\n}) => {\r\n  return (\r\n    <Modal show={show} onClose={onClose} className={'win-modal'}>\r\n      <h1 className='modal-title'>Congratulations!!</h1>\r\n      <div className='modal-row'>\r\n        Moves: <span>{moves}</span>\r\n      </div>\r\n      <div className='modal-row'>\r\n        Score: <span>{score}</span>\r\n      </div>\r\n      <button className='play-again' onClick={() => playAgain()}>\r\n        Play Again\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WinModal;\r\n","import { Fragment, useCallback, useEffect, useState } from 'react';\r\nimport Card from '../components/Card';\r\nimport { MemoryCard, MemoryDeck } from '../shared/models/MemoryCard';\r\nimport { shuffle } from '../shared/utils/array.utils';\r\nimport '../Card.scss';\r\nimport '../Game.scss';\r\nimport WinModal from '../components/WinModal';\r\n\r\nexport interface GameProps {\r\n  cards: MemoryDeck;\r\n  size: number;\r\n}\r\n\r\nconst Game: React.FunctionComponent<GameProps> = props => {\r\n  const [cards, setCards] = useState<MemoryDeck>([]);\r\n  const [foundCards, setFoundCards] = useState<string[]>([]);\r\n  const [card1, setCard1] = useState<MemoryCard | null>(null);\r\n  const [card2, setCard2] = useState<MemoryCard | null>(null);\r\n  const [score, setScore] = useState(0);\r\n  const [moves, setMoves] = useState(0);\r\n  const [showWinModal, setShowWinModal] = useState(false);\r\n\r\n  const resetCards = () => {\r\n    setCard1(null);\r\n    setCard2(null);\r\n  };\r\n\r\n  const resetGame = useCallback(() => {\r\n    resetCards();\r\n    setScore(0);\r\n    setMoves(0);\r\n    setFoundCards([]);\r\n    setShowWinModal(false);\r\n    setCards([]);\r\n    setTimeout(() => {\r\n      const shuffledCards = shuffle(props.cards).slice(0, props.size);\r\n      const ogCards = shuffledCards.map(card => ({\r\n        ...card,\r\n        k: card.value\r\n      }));\r\n      const dupeCards = shuffledCards.map(card => ({\r\n        ...card,\r\n        k: card.value + '2'\r\n      }));\r\n      setCards(shuffle([...ogCards, ...dupeCards]));\r\n    }, 500);\r\n  }, [props.cards, props.size]);\r\n\r\n  const isCardOpen = (card: MemoryCard) => {\r\n    return card1?.k === card?.k || card2?.k === card.k;\r\n  };\r\n\r\n  const isCardFound = (card: MemoryCard) => {\r\n    return foundCards.includes(card.value);\r\n  };\r\n\r\n  const handleCardClick = (card: MemoryCard) => {\r\n    if (foundCards.includes(card.value)) {\r\n      return;\r\n    }\r\n    if (card1 === card) {\r\n      setCard1(null);\r\n      return;\r\n    }\r\n    if (card2 === card) {\r\n      setCard2(null);\r\n      return;\r\n    }\r\n\r\n    if (!card1) {\r\n      setCard1(card);\r\n    } else if (!card2) {\r\n      setCard2(card);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    resetGame();\r\n  }, [props.cards, props.size, resetGame]);\r\n\r\n  useEffect(() => {\r\n    resetCards();\r\n    if (foundCards.length === props.size) {\r\n      setTimeout(() => {\r\n        setShowWinModal(true);\r\n      }, 1000);\r\n    }\r\n  }, [foundCards, props.size]);\r\n\r\n  useEffect(() => {\r\n    if (card1 && card2) {\r\n      setMoves(m => m + 1);\r\n      if (card1.value === card2.value) {\r\n        setFoundCards(fc => [...fc, card1.value]);\r\n        setScore(sc => sc + 10);\r\n      } else {\r\n        setTimeout(() => {\r\n          resetCards();\r\n        }, 1000);\r\n      }\r\n    }\r\n  }, [card1, card2]);\r\n\r\n  return (\r\n    <div className='app-game'>\r\n      {cards.length ? (\r\n        <Fragment>\r\n          <div className='stats'>\r\n            <div className='stat'>Score: {score}</div>\r\n            <div className='stat'>Moves: {moves}</div>\r\n          </div>\r\n\r\n          <div className={`cards sz-${props.size * 2}`}>\r\n            {cards.map(card => (\r\n              <Card\r\n                card={card}\r\n                key={card.k}\r\n                onClick={handleCardClick}\r\n                open={!!isCardOpen(card)}\r\n                found={isCardFound(card)}\r\n              />\r\n            ))}\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <div className='loading'>Loading...</div>\r\n      )}\r\n      <WinModal\r\n        show={showWinModal}\r\n        onClose={resetGame}\r\n        playAgain={resetGame}\r\n        score={score}\r\n        moves={moves}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import { MemoryDeck } from '../models/MemoryCard';\r\n\r\nexport const fruits: MemoryDeck = [\r\n  {\r\n    title: 'Apple',\r\n    src: 'assets/images/apple.png',\r\n    value: 'apple'\r\n  },\r\n  {\r\n    title: 'Avocado',\r\n    src: 'assets/images/avocado.png',\r\n    value: 'avocado'\r\n  },\r\n  {\r\n    title: 'Banana',\r\n    src: 'assets/images/banana.png',\r\n    value: 'banana'\r\n  },\r\n  {\r\n    title: 'Cherry',\r\n    src: 'assets/images/cherry.png',\r\n    value: 'cherry'\r\n  },\r\n  {\r\n    title: 'Coconut',\r\n    src: 'assets/images/coconut.png',\r\n    value: 'coconut'\r\n  },\r\n  {\r\n    title: 'Custard Apple',\r\n    src: 'assets/images/custardapple.png',\r\n    value: 'custardapple'\r\n  },\r\n  {\r\n    title: 'Grape',\r\n    src: 'assets/images/grape.png',\r\n    value: 'grape'\r\n  },\r\n  {\r\n    title: 'Guava',\r\n    src: 'assets/images/guava.png',\r\n    value: 'guava'\r\n  },\r\n  {\r\n    title: 'Jackfruit',\r\n    src: 'assets/images/jackfruit.png',\r\n    value: 'jackfruit'\r\n  },\r\n  {\r\n    title: 'Kiwi',\r\n    src: 'assets/images/kiwi.png',\r\n    value: 'kiwi'\r\n  },\r\n  {\r\n    title: 'Mango',\r\n    src: 'assets/images/mango.png',\r\n    value: 'mango'\r\n  },\r\n  {\r\n    title: 'Orange',\r\n    src: 'assets/images/orange.png',\r\n    value: 'orange'\r\n  },\r\n  {\r\n    title: 'Papaya',\r\n    src: 'assets/images/papaya.png',\r\n    value: 'papaya'\r\n  },\r\n  {\r\n    title: 'Peach',\r\n    src: 'assets/images/peach.png',\r\n    value: 'peach'\r\n  },\r\n  {\r\n    title: 'Pineapple',\r\n    src: 'assets/images/pineapple.png',\r\n    value: 'pineapple'\r\n  },\r\n  {\r\n    title: 'Pomegranate',\r\n    src: 'assets/images/pomegranate.png',\r\n    value: 'pomegranate'\r\n  },\r\n  {\r\n    title: 'Strawberry',\r\n    src: 'assets/images/strawberry.png',\r\n    value: 'strawberry'\r\n  },\r\n  {\r\n    title: 'Watermelon',\r\n    src: 'assets/images/watermelon.png',\r\n    value: 'watermelon'\r\n  }\r\n];\r\n","import { Fragment, useState } from 'react';\r\nimport Modal from './Modal';\r\n\r\nconst About: React.FunctionComponent = () => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const open = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  const close = () => {\r\n    setShow(false);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <button className='icon-button game-option' onClick={() => open()}>\r\n        i\r\n      </button>\r\n      <Modal show={show} onClose={close} className='about'>\r\n        <h1 className='modal-title'>About</h1>\r\n        <div className='modal-row'>\r\n          Images from{' '}\r\n          <a\r\n            href='https://iconscout.com/icons/star'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n            className='link'\r\n          >\r\n            IconScout\r\n          </a>{' '}\r\n          and{' '}\r\n          <a\r\n            href='https://pngegg.com'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n            className='link'\r\n          >\r\n            PngEgg (Card Foregrounds)\r\n          </a>\r\n        </div>\r\n        <div className='modal-row'>\r\n          Fonts from{' '}\r\n          <a\r\n            href='https://fonts.google.com'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n            className='link'\r\n          >\r\n            Google Fonts\r\n          </a>\r\n        </div>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { Fragment, useState } from 'react';\r\nimport Modal from './Modal';\r\n\r\nconst HowToPlay: React.FunctionComponent = () => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const open = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  const close = () => {\r\n    setShow(false);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <button className='icon-button game-option' onClick={() => open()}>\r\n        ?\r\n      </button>\r\n      <Modal show={show} onClose={close} className='how-to-play'>\r\n        <h1 className='modal-title'>How To Play?</h1>\r\n        <div className='modal-row'>Choose from 4 to 36 cards to play with!</div>\r\n        <div className='modal-row'>\r\n          Try finding matches by remembering positions of the card.\r\n        </div>\r\n        <div className='modal-row'>Each pair opened adds 1 move.</div>\r\n        <div className='modal-row'>\r\n          Each correct pair opened gives you 10 points!\r\n        </div>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HowToPlay;\r\n","import About from './About';\r\nimport HowToPlay from './HowToPlay';\r\n\r\nexport interface HeaderProps {\r\n  handleGameSizeSelection: any;\r\n  size: number;\r\n}\r\n\r\nconst Header: React.FunctionComponent<HeaderProps> = ({\r\n  handleGameSizeSelection,\r\n  size\r\n}) => {\r\n  const gameSizes = [4, 16, 24, 36];\r\n  return (\r\n    <header className='app-header'>\r\n      <h1 className='app-title'>Memory Game</h1>\r\n      <div className='game-options'>\r\n        <About />\r\n        <HowToPlay />\r\n      </div>\r\n      <div className='game-options'>\r\n        {gameSizes.map(sz => (\r\n          <button\r\n            className={`game-option${size === sz / 2 ? ' active' : ''}`}\r\n            key={sz}\r\n            onClick={() => handleGameSizeSelection(sz / 2)}\r\n          >\r\n            {sz}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import './App.scss';\nimport Game from './views/Game';\nimport { fruits } from './shared/constants/fruits';\nimport { Fragment, useState } from 'react';\nimport Header from './components/Header';\n\nfunction App() {\n  const [size, setSize] = useState(\n    parseInt(localStorage.getItem('gameSize') || '18', 10)\n  );\n  const handleGameSizeSelection = (sz: number) => {\n    localStorage.setItem('gameSize', `${sz}`);\n    setSize(sz);\n  };\n  return (\n    <Fragment>\n      <Header handleGameSizeSelection={handleGameSizeSelection} size={size} />\n      <Game cards={fruits} size={size}></Game>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}